{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/rarsh/Documents/blaffa%20project/blaffa_site/src/lib/axios.ts"],"sourcesContent":["import axios, { AxiosError, InternalAxiosRequestConfig } from 'axios';\r\n\r\nconst API_URL = 'https://api.blaffa.net';\r\n\r\n// Create axios instance with base URL\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nlet isRefreshing = false;\r\nlet failedQueue: Array<{\r\n  resolve: (token: string) => void;\r\n  reject: (error: unknown) => void;\r\n}> = [];\r\n\r\nconst processQueue = (error: unknown, token: string | null = null) => {\r\n  failedQueue.forEach(prom => {\r\n    if (error) {\r\n      prom.reject(error);\r\n    } else {\r\n      prom.resolve(token!);\r\n    }\r\n  });\r\n  failedQueue = [];\r\n};\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('accessToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle token refresh\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error: AxiosError) => {\r\n    const originalRequest = error.config as InternalAxiosRequestConfig & { _retry?: boolean };\r\n\r\n    // If the error is 401 and we haven't tried to refresh yet\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      if (isRefreshing) {\r\n        // If we're already refreshing, add the request to the queue\r\n        return new Promise((resolve, reject) => {\r\n          failedQueue.push({ resolve, reject });\r\n        })\r\n          .then((token) => {\r\n            originalRequest.headers.Authorization = `Bearer ${token}`;\r\n            return api(originalRequest);\r\n          })\r\n          .catch((err) => {\r\n            return Promise.reject(err);\r\n          });\r\n      }\r\n\r\n      originalRequest._retry = true;\r\n      isRefreshing = true;\r\n\r\n      try {\r\n        const refreshToken = localStorage.getItem('refreshToken');\r\n        if (!refreshToken) {\r\n          // No refresh token available, redirect to login\r\n          localStorage.removeItem('accessToken');\r\n          window.location.href = '/auth';\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        // Try to refresh the token\r\n        const response = await axios.post(\r\n          `${API_URL}/auth/refresh`,\r\n          { refresh: refreshToken },\r\n          { headers: { 'Content-Type': 'application/json' } }\r\n        );\r\n\r\n        const { access, refresh: newRefresh } = response.data;\r\n        \r\n        // Update tokens in localStorage\r\n        localStorage.setItem('accessToken', access);\r\n        if (newRefresh) {\r\n          localStorage.setItem('refreshToken', newRefresh);\r\n        }\r\n\r\n        // Update the Authorization header\r\n        api.defaults.headers.common.Authorization = `Bearer ${access}`;\r\n        originalRequest.headers.Authorization = `Bearer ${access}`;\r\n\r\n        // Process the queue\r\n        processQueue(null, access);\r\n\r\n        // Retry the original request\r\n        return api(originalRequest);\r\n      } catch (refreshError) {\r\n        // If refresh fails, clear tokens and redirect to login\r\n        console.error('Failed to refresh token:', refreshError);\r\n        localStorage.removeItem('accessToken');\r\n        localStorage.removeItem('refreshToken');\r\n        window.location.href = '/auth';\r\n        processQueue(refreshError);\r\n        return Promise.reject(refreshError);\r\n      } finally {\r\n        isRefreshing = false;\r\n      }\r\n    }\r\n\r\n    // For other errors, just reject\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,UAAU;AAEhB,sCAAsC;AACtC,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,IAAI,eAAe;AACnB,IAAI,cAGC,EAAE;AAEP,MAAM,eAAe,CAAC,OAAgB,QAAuB,IAAI;IAC/D,YAAY,OAAO,CAAC,CAAA;QAClB,IAAI,OAAO;YACT,KAAK,MAAM,CAAC;QACd,OAAO;YACL,KAAK,OAAO,CAAC;QACf;IACF;IACA,cAAc,EAAE;AAClB;AAEA,wCAAwC;AACxC,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,CAAC;IACC,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;IAClD;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,+CAA+C;AAC/C,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAC3B,CAAC,WAAa,UACd,OAAO;IACL,MAAM,kBAAkB,MAAM,MAAM;IAEpC,0DAA0D;IAC1D,IAAI,MAAM,QAAQ,EAAE,WAAW,OAAO,CAAC,gBAAgB,MAAM,EAAE;QAC7D,IAAI,cAAc;YAChB,4DAA4D;YAC5D,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,YAAY,IAAI,CAAC;oBAAE;oBAAS;gBAAO;YACrC,GACG,IAAI,CAAC,CAAC;gBACL,gBAAgB,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;gBACzD,OAAO,IAAI;YACb,GACC,KAAK,CAAC,CAAC;gBACN,OAAO,QAAQ,MAAM,CAAC;YACxB;QACJ;QAEA,gBAAgB,MAAM,GAAG;QACzB,eAAe;QAEf,IAAI;YACF,MAAM,eAAe,aAAa,OAAO,CAAC;YAC1C,IAAI,CAAC,cAAc;gBACjB,gDAAgD;gBAChD,aAAa,UAAU,CAAC;gBACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;gBACvB,OAAO,QAAQ,MAAM,CAAC;YACxB;YAEA,2BAA2B;YAC3B,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,GAAG,QAAQ,aAAa,CAAC,EACzB;gBAAE,SAAS;YAAa,GACxB;gBAAE,SAAS;oBAAE,gBAAgB;gBAAmB;YAAE;YAGpD,MAAM,EAAE,MAAM,EAAE,SAAS,UAAU,EAAE,GAAG,SAAS,IAAI;YAErD,gCAAgC;YAChC,aAAa,OAAO,CAAC,eAAe;YACpC,IAAI,YAAY;gBACd,aAAa,OAAO,CAAC,gBAAgB;YACvC;YAEA,kCAAkC;YAClC,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,QAAQ;YAC9D,gBAAgB,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,QAAQ;YAE1D,oBAAoB;YACpB,aAAa,MAAM;YAEnB,6BAA6B;YAC7B,OAAO,IAAI;QACb,EAAE,OAAO,cAAc;YACrB,uDAAuD;YACvD,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,aAAa,UAAU,CAAC;YACxB,aAAa,UAAU,CAAC;YACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;YACvB,aAAa;YACb,OAAO,QAAQ,MAAM,CAAC;QACxB,SAAU;YACR,eAAe;QACjB;IACF;IAEA,gCAAgC;IAChC,OAAO,QAAQ,MAAM,CAAC;AACxB;uCAGa","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/rarsh/Documents/blaffa%20project/blaffa_site/src/components/AuthForm.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n// import '../globals.css';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Eye, EyeOff, User, Lock, Mail, ArrowRight, Phone } from 'lucide-react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getMessaging, getToken } from 'firebase/messaging';\r\nimport { useTheme } from './ThemeProvider';\r\nimport api from '@/lib/axios';\r\n\r\n\r\n//const API_URL = `https://api.blaffa.net/auth`;\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCpYf8cR98sJ9Vw12ARlXFUqJyy3PSI1Vg\",\r\n  authDomain: \"betpay-509eb.firebaseapp.com\",\r\n  projectId: \"betpay-509eb\",\r\n  storageBucket: \"betpay-509eb.firebasestorage.app\",\r\n  messagingSenderId: \"827338495555\",\r\n  appId: \"1:827338495555:web:9949d7c2caffe2b599e6f6\",\r\n  vapidKey: \"BFHKpREc3F52Eb4uBMUMmfuQQBj7yd_5IjXK248ZeVKO7axslH2S3s09DEo5r1zwQ3Apz4xZnNiyNBmx3vVNv38\"\r\n};\r\n\r\nexport default function AuthForm() {\r\n  const { t } = useTranslation();\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\r\n  const [forgotPasswordStep, setForgotPasswordStep] = useState(1); // 1: Email, 2: OTP, 3: New Password\r\n\r\n  const [fullName, setFullName] = useState(''); // Full name for registration\r\n  const [email, setEmail] = useState(''); // Email for registration and forgot password\r\n  const [phone, setPhone] = useState(''); // Phone for registration\r\n  const [emailOrPhone, setEmailOrPhone] = useState(''); // Email or phone for login\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState(''); // For registration only\r\n  const [otp, setOtp] = useState(''); // For forgot password OTP\r\n  const [newPassword, setNewPassword] = useState(''); // For forgot password new password\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState(''); // For forgot password confirm new password\r\n  const [notification, setNotification] = useState<{ type: 'success' | 'error'; message: string } | null>(null);\r\n  // Add these state variables to your component\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { theme } = useTheme();\r\n\r\n\r\n\r\n\r\n  const isValidPassword = (password: string): boolean => {\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{6,}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const isValidEmailOrPhone = (input: string) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(input) || /^\\+?\\d+$/.test(input);\r\n  const isValidEmail = (input: string) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(input);\r\n\r\n  const initializeFCM = async () => {\r\n    try {\r\n      // Initialize Firebase app if not already initialized\r\n      const app = initializeApp(firebaseConfig);\r\n      \r\n      // Get messaging instance\r\n      const messaging = getMessaging(app);\r\n      \r\n      // Request permission for notifications (required for web)\r\n      const permission = await Notification.requestPermission();\r\n      \r\n      if (permission === 'granted') {\r\n        // Get token with your VAPID key\r\n        const currentToken = await getToken(messaging, {\r\n          vapidKey: firebaseConfig.vapidKey\r\n        });\r\n        \r\n        if (currentToken) {\r\n          console.log('FCM token received:', currentToken);\r\n          // Here you can send this token to your backend\r\n          return currentToken;\r\n        } else {\r\n          console.log('No registration token available. Request permission to generate one.');\r\n          return null;\r\n        }\r\n      } else {\r\n        console.log('Notification permission denied.');\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error initializing FCM:', error);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  // Modify your handleSubmit function to include FCM initialization\r\n  // This is how your handleSubmit function should look after modification:\r\n  \r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n  \r\n    if (isForgotPassword) {\r\n      handleForgotPasswordSubmit();\r\n      return;\r\n    }\r\n  \r\n    if (isLogin) {\r\n      // Login validation\r\n      if (!isValidEmailOrPhone(emailOrPhone)) {\r\n        setNotification({ type: 'error', message: t('Invalid email or phone number') });\r\n        return;\r\n      }\r\n    } else {\r\n      // Registration validation\r\n      const sanitizedPhone = phone.replace(/\\s+/g, '');\r\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\r\n        setNotification({ type: 'error', message: t('Invalid email address') });\r\n        return;\r\n      }\r\n      if (!/^\\+?\\d+$/.test(sanitizedPhone)) {\r\n        setNotification({ type: 'error', message: t('Invalid phone number') });\r\n        return;\r\n      }\r\n      if (!isValidPassword(password)) {\r\n        setNotification({\r\n          type: 'error',\r\n          message: t(\r\n            'The password must include at least one uppercase letter, one lowercase letter, one digit, and be at least 6 characters long.'\r\n          ),\r\n        });\r\n        return;\r\n      }\r\n      if (password !== confirmPassword) {\r\n        setNotification({ type: 'error', message: t('Passwords do not match') });\r\n        return;\r\n      }\r\n    }\r\n  \r\n    const sanitizedEmailOrPhone = emailOrPhone.replace(/\\s+/g, '');\r\n    const payload = isLogin\r\n      ? { email_or_phone: sanitizedEmailOrPhone, password }\r\n      : {\r\n          first_name: fullName.split(' ')[0] || '',\r\n          last_name: fullName.split(' ')[1] || '',\r\n          email,\r\n          phone: phone.replace(/\\s+/g, ''),\r\n          phone_indicative: '+229',\r\n          password,\r\n          re_password: confirmPassword,\r\n        };\r\n  \r\n        setIsLoading(true); // Set loading to true when login starts\r\n  \r\n  \r\n    try {\r\n      const response = await api.post(\r\n        `/auth/${isLogin ? 'login' : 'registration'}`,\r\n        payload\r\n      );\r\n  \r\n      if (isLogin) {\r\n        console.log('Login response:', response.data);\r\n        const { refresh, access, data } = response.data;\r\n        localStorage.setItem('refreshToken', refresh);\r\n        localStorage.setItem('accessToken', access);\r\n        if (data && data.id) {\r\n          localStorage.setItem('userId', data.id.toString());\r\n        }\r\n\r\n        // Set up axios default headers\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${access}`;\r\n        \r\n        // Initialize FCM after successful login\r\n        try {\r\n          const fcmToken = await initializeFCM();\r\n          if (fcmToken) {\r\n            // Optionally send the token to your backend\r\n            await api.post(\r\n              `/blaffa/devices/`,\r\n              { registration_id: fcmToken,\r\n                type: 'web',\r\n               },\r\n              { \r\n                headers: { \r\n                  'Content-Type': 'application/json',\r\n                  'Authorization': `Bearer ${access}`\r\n                } \r\n              }\r\n            );\r\n            console.log('Device registered for notifications:', fcmToken);\r\n          }\r\n        } catch (fcmError) {\r\n          console.error('Error registering device for notifications:', fcmError);\r\n          // Non-critical error, don't block the login process\r\n        }\r\n        \r\n        setNotification({ type: 'success', message: t('Login successful! Redirecting to your dashboard...') });\r\n        setTimeout(() => {\r\n          window.location.href = '/dashboard';\r\n        }, 500);\r\n      } else {\r\n        setNotification({ type: 'success', message: t('Registration successful! Please login.') });\r\n        setIsLogin(true);\r\n        \r\n      }\r\n    } catch (error: unknown) {\r\n      handleApiError(error);\r\n    }finally {\r\n      setIsLoading(false); // Set loading to false when login or registration is complete\r\n    }\r\n  };\r\n  \r\n\r\n  const handleForgotPasswordSubmit = async () => {\r\n    try {\r\n      if (forgotPasswordStep === 1) {\r\n        // Step 1: Send email for OTP\r\n        if (!isValidEmail(email)) {\r\n          setNotification({ type: 'error', message: t('Please enter a valid email address') });\r\n          return;\r\n        }\r\n        \r\n        await api.post(`/auth/send_otp`, { email });\r\n        \r\n        setNotification({ type: 'success', message: t('OTP has been sent to your email', 'if you cant see it check your Junk older as well') });\r\n        setForgotPasswordStep(2);\r\n      } \r\n      else if (forgotPasswordStep === 2) {\r\n        // Step 2: Verify OTP and move to password reset\r\n        if (!otp || otp.length < 4) {\r\n          setNotification({ type: 'error', message: t('Please enter a valid OTP') });\r\n          return;\r\n        }\r\n        \r\n        // We don't need to verify OTP here, just move to the next step\r\n        setNotification({ type: 'success', message: t('OTP verified successfully') });\r\n        setForgotPasswordStep(3);\r\n      } \r\n      else if (forgotPasswordStep === 3) {\r\n        // Step 3: Reset password\r\n        if (!isValidPassword(newPassword)) {\r\n          setNotification({\r\n            type: 'error',\r\n            message: t(\r\n              'The new password must include at least one uppercase letter, one lowercase letter, one digit, and be at least 6 characters long.'\r\n            ),\r\n          });\r\n          return;\r\n        }\r\n        \r\n        if (newPassword !== confirmNewPassword) {\r\n          setNotification({ type: 'error', message: t('Passwords do not match') });\r\n          return;\r\n        }\r\n        \r\n        const resetPayload = {\r\n          otp,\r\n          new_password: newPassword,\r\n          confirm_new_password: confirmNewPassword\r\n        };\r\n        \r\n        await api.post(`/auth/reset_password`, resetPayload);\r\n        \r\n        setNotification({ type: 'success', message: t('Password reset successful! Please login with your new password.') });\r\n        // Reset states\r\n        setIsForgotPassword(false);\r\n        setForgotPasswordStep(1);\r\n        setIsLogin(true);\r\n        setOtp('');\r\n        setNewPassword('');\r\n        setConfirmNewPassword('');\r\n        setEmail('');\r\n      }\r\n    } catch (error: unknown) {\r\n      handleApiError(error);\r\n    }\r\n  };\r\n\r\n  const handleBackToLogin = () => {\r\n    setIsForgotPassword(false);\r\n    setForgotPasswordStep(1);\r\n    setOtp('');\r\n    setNewPassword('');\r\n    setConfirmNewPassword('');\r\n    setEmail('');\r\n  };\r\n\r\n  \r\n\r\n  // Render forgot password form based on current step\r\n  const renderForgotPasswordForm = () => {\r\n    switch (forgotPasswordStep) {\r\n      case 1:\r\n        return (\r\n          <div className=\"space-y-4\">\r\n            <h2 className=\"text-xl font-semibold text-center\">{t('Forgot Password')}</h2>\r\n            <p className=\"text-sm text-center\">{t('Enter your email to receive a verification code')}</p>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium\">{t('Email')}</label>\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <Mail className=\"h-5 w-5 text-gray-400\" />\r\n                </div>\r\n                <input\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                  placeholder={t(\"Enter your email or phone\")}\r\n                  className=\"bg-gray-700 text-white w-full pl-10 pr-3 py-3 rounded-lg border border-gray-600 focus:ring-2 focus:ring-orange-500 focus:border-transparent outline-none transition-all placeholder:text-sm sm:placeholder:text-base\"\r\n                  />\r\n              </div>\r\n            </div>\r\n            \r\n            <button\r\n              type=\"submit\"\r\n              className={`w-full bg-blue-500 hover:bg-blue-600 text-white font-medium py-3 px-4 rounded-lg flex items-center justify-center transition-all duration-300  relative overflow-hidden group`}\r\n              >\r\n              {t('Send Verification Code')}\r\n            </button>\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={handleBackToLogin}\r\n              className=\"w-full bg-gray-200 text-gray-800 py-2 rounded hover:bg-gray-300 mt-2\"\r\n            >\r\n              {t('Back to Login')}\r\n            </button>\r\n          </div>\r\n        );\r\n        \r\n      case 2:\r\n        return (\r\n          <div className=\"space-y-4\">\r\n            <h2 className=\"text-xl font-semibold text-center\">{t('Enter Verification Code')}</h2>\r\n            <p className=\"text-sm text-center\">{t('We sent a code to your email. Please enter it below.')}</p>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium\">{t('Verification Code')}</label>\r\n              <input\r\n                type=\"text\"\r\n                value={otp}\r\n                onChange={(e) => setOtp(e.target.value)}\r\n                required\r\n                className=\"w-full p-3 border rounded\"\r\n                placeholder={t('Enter verification code')}\r\n              />\r\n            </div>\r\n            \r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full bg-blue-600 text-white py-3 rounded hover:bg-blue-700\"\r\n            >\r\n              {t('Verify Code')}\r\n            </button>\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setForgotPasswordStep(1)}\r\n              className=\"w-full bg-gray-200 text-gray-800 py-2 rounded hover:bg-gray-300 mt-2\"\r\n            >\r\n              {t('Back')}\r\n            </button>\r\n          </div>\r\n        );\r\n        \r\n      case 3:\r\n        return (\r\n          <div className=\"space-y-4\">\r\n            <h2 className=\"text-xl font-semibold text-center\">{t('Reset Password')}</h2>\r\n            <p className=\"text-sm text-center\">{t('Create a new password for your account')}</p>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium\">{t('New Password')}</label>\r\n              <div className=\"relative\">\r\n                {/* <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <Lock className=\"h-5 w-5 text-gray-400\" />\r\n                </div> */}\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n            className=\"w-full p-3 border rounded\"\r\n            placeholder={t('Enter new password')}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setShowPassword(!showPassword)}\r\n            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500\"\r\n          >\r\n            {showPassword ? <EyeOff size={20} /> : <Eye size={20} />}\r\n          </button>\r\n        </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium\">{t('Confirm New Password')}</label>\r\n              <div className=\"relative\">\r\n                {/* <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <Lock className=\"h-5 w-5 text-gray-400\" />\r\n                </div> */}\r\n          <input\r\n            type={showConfirmPassword ? \"text\" : \"password\"}\r\n            value={confirmNewPassword}\r\n            onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n            required\r\n            className=\"w-full p-3 border rounded\"\r\n            placeholder={t('Confirm new password')}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500\"\r\n          >\r\n            {showConfirmPassword ? <EyeOff size={20} /> : <Eye size={20} />}\r\n          </button>\r\n        </div>\r\n            </div>\r\n            \r\n            <button\r\n              type=\"submit\"\r\n              className={`w-full bg-blue-500 hover:bg-blue-600 text-white font-medium py-3 px-4 rounded-lg flex items-center justify-center transition-all duration-300 relative overflow-hidden group`}\r\n              >\r\n              {t('Reset Password')}\r\n            </button>\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setForgotPasswordStep(2)}\r\n              className=\"w-full bg-gray-200 text-gray-800 py-2 rounded hover:bg-gray-300 mt-2\"\r\n            >\r\n              {t('Back')}\r\n            </button>\r\n          </div>\r\n        );\r\n        \r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Improved error handling function to make API errors more user-friendly\r\n  const handleApiError = (error: unknown) => {\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      const { status, data } = error.response;\r\n      \r\n      // Log the full error for debugging\r\n      console.error('API Error:', status, data);\r\n      \r\n      // Case 1: Direct message format: {\"success\":false,\"message\":\"Error message\"}\r\n      if (data.message && typeof data.message === 'string') {\r\n        setNotification({ type: 'error', message: data.message });\r\n        return;\r\n      }\r\n\r\n      \r\n      // Case 2: Field-specific errors without nested 'errors' object\r\n      // Format: {\"email\": [\"Error message\"], \"phone\": [\"Error message\"]}\r\n      const fieldErrors: string[] = [];\r\n      \r\n      // Check if data contains field-specific errors directly\r\n      if (data && typeof data === 'object' && !Array.isArray(data)) {\r\n        let hasFieldErrors = false;\r\n        \r\n        Object.entries(data).forEach(([field, messages]) => {\r\n          // Skip non-array fields or success/status indicators\r\n          if (Array.isArray(messages) && field !== 'success' && field !== 'status') {\r\n            hasFieldErrors = true;\r\n            const fieldMessage = messages.join(', ');\r\n            fieldErrors.push(`${field}: ${fieldMessage}`);\r\n          }\r\n        });\r\n        \r\n        if (hasFieldErrors) {\r\n          setNotification({ \r\n            type: 'error', \r\n            message: t('Please correct the following:') + '\\n' + fieldErrors.join('\\n') \r\n          });\r\n          return;\r\n        }\r\n      }\r\n      \r\n      // Case 3: Errors nested in an 'errors' property\r\n      if (data.errors && typeof data.errors === 'object') {\r\n        const errorMessages = Object.entries(data.errors)\r\n          .map(([field, msgs]) => `${field}: ${Array.isArray(msgs) ? msgs.join(', ') : msgs}`)\r\n          .join('\\n');\r\n        \r\n        setNotification({ \r\n          type: 'error', \r\n          message: t('Please correct the following:') + '\\n' + errorMessages \r\n        });\r\n        return;\r\n      }\r\n      \r\n      // Fall back to status-code based generic messages if no specific error format is detected\r\n      switch (status) {\r\n        case 400:\r\n          setNotification({ \r\n            type: 'error', \r\n            message: t('There was a problem with your request. Please check your information and try again.') \r\n          });\r\n          break;\r\n          \r\n        case 401:\r\n          setNotification({ \r\n            type: 'error', \r\n            message: t('Authentication failed. Please check your credentials and try again.') \r\n          });\r\n          break;\r\n          \r\n        case 403:\r\n          setNotification({ \r\n            type: 'error', \r\n            message: t('You do not have permission to perform this action.') \r\n          });\r\n          break;\r\n          \r\n        case 404:\r\n          setNotification({ \r\n            type: 'error', \r\n            message: t('The requested resource was not found. Please try again later.') \r\n          });\r\n          break;\r\n          \r\n        case 422:\r\n          setNotification({ \r\n            type: 'error', \r\n            message: t('Validation failed. Please check your information and try again.') \r\n          });\r\n          break;\r\n          \r\n        case 429:\r\n          setNotification({ \r\n            type: 'error', \r\n            message: t('Too many requests. Please wait a moment and try again.') \r\n          });\r\n          break;\r\n          \r\n        case 500:\r\n        case 502:\r\n        case 503:\r\n        case 504:\r\n          setNotification({ \r\n            type: 'error', \r\n            message: t('Server error. Our team has been notified. Please try again later.') \r\n          });\r\n          break;\r\n          \r\n        default:\r\n          setNotification({ \r\n            type: 'error', \r\n            message: t('An error occurred. Please try again later.') \r\n          });\r\n      }\r\n    } else {\r\n      // For non-Axios errors\r\n      console.error('Non-API Error:', error);\r\n      setNotification({ \r\n        type: 'error', \r\n        message: t('Connection error. Please check your internet connection and try again.') \r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n   <div className={`bg-gradient-to-br ${theme.colors.s_background} backdrop-blur-sm rounded-2xl p-8 shadow-xl`}>\r\n\r\n        {/* {!isForgotPassword && (\r\n          <h2 className={`text-2xl font-bold text-center mb-6 ${theme.colors.text}`}>\r\n            {t(\"Welcome to Blaffa\")}\r\n          </h2>\r\n        )} */}\r\n\r\n        {/* Notification */}\r\n        {notification && (\r\n          <div\r\n            className={`mb-4 p-3 rounded ${\r\n              notification.type === \"success\"\r\n                ? \"bg-green-100 text-green-700\"\r\n                : \"bg-blue-100 text-red-700\"\r\n            }`}\r\n          >\r\n            {notification.message.split(\"\\n\").map((line, index) => (\r\n              <div key={index}>{line}</div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {!isForgotPassword && (\r\n          <div className=\"flex justify-around mb-6 font-bold\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setIsLogin(true)}\r\n              className={`flex-1 py-2 font-medium text-center transition-all ${\r\n                isLogin ? \"bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 transition-all transform hover:scale-105 text-white rounded-lg\" : \"bg-transparent\"\r\n              }`}\r\n            >\r\n              {t(\"Login\")}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setIsLogin(false)}\r\n              className={`flex-1 py-2 font-medium text-center transition-all ${\r\n                !isLogin ? \"text-white bg-gradient-to-r from-blue-500 to-blue-600 rounded-lg hover:from-blue-600 hover:to-blue-700 transition-all transform hover:scale-105 rounded-lg\" : \"bg-transparent\"\r\n              }`}\r\n            >\r\n              {t(\"Register\")}\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          {isForgotPassword ? (\r\n            renderForgotPasswordForm()\r\n          ) : (\r\n            <>\r\n              {!isLogin && (\r\n                <div>\r\n                  <label className=\"block text-sm font-medium\">\r\n                    {t(\"Full Name\")}\r\n                  </label>\r\n                    <div className=\"relative\">\r\n                      <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                        <User className=\"h-5 w-5 text-gray-400\" />\r\n                      </div>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={fullName}\r\n                        onChange={(e) => setFullName(e.target.value)}\r\n                        required\r\n                        placeholder={t(\"Enter your full name\")}\r\n                        className=\"bg-gray-700 text-white w-full pl-10 pr-3 py-3 rounded-lg border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\r\n                      />\r\n                    </div>\r\n                  \r\n                </div>\r\n              )}\r\n\r\n              {isLogin ? (\r\n                <div>\r\n                  <label className=\"block text-sm font-medium\">\r\n                    {t(\"Email or Phone\")}\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                      <Mail className=\"h-5 w-5 text-gray-400\" />\r\n                    </div>\r\n                    <input\r\n                      type=\"email\"\r\n                      value={emailOrPhone}\r\n                      onChange={(e) => setEmailOrPhone(e.target.value)}\r\n                      required\r\n                      placeholder={t(\"Enter your email or phone\")}\r\n                      className=\"bg-gray-700 text-white w-full pl-10 pr-3 py-3 rounded-lg border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all placeholder:text-sm sm:placeholder:text-base\"\r\n                    />\r\n                </div>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium\">\r\n                      {t(\"Email\")}\r\n                    </label>\r\n                    <div className=\"relative\">\r\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <Mail className=\"h-5 w-5 text-gray-400\" />\r\n                  </div>\r\n                  <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                    placeholder={t(\"Enter your email\")}\r\n                    className=\"bg-gray-700 text-white w-full pl-10 pr-3 py-3 rounded-lg border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all placeholder:text-sm sm:placeholder:text-base\"\r\n                  />\r\n                </div>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium\">\r\n                      {t(\"Phone\")}\r\n                    </label>\r\n                    <div className=\"relative\">\r\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <Phone className=\"h-5 w-5 text-gray-400\" />\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={phone}\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                    required\r\n                    placeholder={t(\"Enter your phone number\")}\r\n                    className=\"bg-gray-700 text-white w-full pl-10 pr-3 py-3 rounded-lg border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all placeholder:text-sm sm:placeholder:text-base\"\r\n                  />\r\n                </div>\r\n                   \r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              {isLogin && (\r\n                <div>\r\n                  <label className=\"block text-sm font-medium\">\r\n                    {t(\"Password\")}\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <Lock className=\"h-5 w-5 text-gray-400\" />\r\n                  </div>\r\n                  <input\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder={t(\"Enter your password\")}\r\n                    className=\"bg-gray-700 text-white w-full pl-10 pr-10 py-3 rounded-lg border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all placeholder:text-sm sm:placeholder:text-base\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                  >\r\n                    {showPassword ? (\r\n                      <EyeOff className=\"h-5 w-5 text-gray-400\" />\r\n                    ) : (\r\n                      <Eye className=\"h-5 w-5 text-gray-400\" />\r\n                    )}\r\n                  </button>\r\n                </div>\r\n                </div>\r\n              )}\r\n\r\n              {!isLogin && (\r\n                <div className=\"flex flex-col sm:flex-row gap-4\">\r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <label className=\"block text-sm font-medium mb-1\">\r\n                      {t(\"Password\")}\r\n                    </label>\r\n                    <div className=\"relative\">\r\n                      <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                        <Lock className=\"h-5 w-5 text-gray-400\" />\r\n                      </div>\r\n                      <input\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                        className=\"bg-gray-700 text-white w-full pl-10 pr-10 py-3 rounded-lg border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all placeholder:text-sm sm:placeholder:text-base\"\r\n                        placeholder={t(\"Enter your password\")}\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => setShowPassword(!showPassword)}\r\n                        className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n                      >\r\n                        {showPassword ? <EyeOff className=\"h-5 w-5 text-gray-400\" /> : <Eye className=\"h-5 w-5 text-gray-400\" />}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <label className=\"block text-sm font-medium mb-1 whitespace-nowrap\">\r\n                      {t(\"Confirm Password\")}\r\n                    </label>\r\n                    <div className=\"relative\">\r\n                      <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                        <Lock className=\"h-5 w-5 text-gray-400\" />\r\n                      </div>\r\n                      <input\r\n                        type={showConfirmPassword ? \"text\" : \"password\"}\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        required\r\n                        className=\"bg-gray-700 text-white w-full pl-10 pr-10 py-3 rounded-lg border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all placeholder:text-sm sm:placeholder:text-base\"\r\n                        placeholder={t(\"Confirm your password\")}\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                        className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n                      >\r\n                        {showConfirmPassword ? <EyeOff className=\"h-5 w-5 text-gray-400\" /> : <Eye className=\"h-5 w-5 text-gray-400\" />}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {isLogin && (\r\n                <div className=\"text-right\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      setIsForgotPassword(true);\r\n                      setForgotPasswordStep(1);\r\n                    }}\r\n                    className=\"text-blue-500 hover:text-blue-400 text-sm transition-colors\">\r\n                    {t(\"Forgot Password?\")}\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 transition-all transform hover:scale-105 text-white font-medium py-3 px-4 rounded-lg flex items-center justify-center duration-300 ${isLoading ? 'animate-pulse' : ''} relative overflow-hidden group\"\r\n              >\r\n                <span className=\"flex items-center justify-center relative z-10\">\r\n                {isLogin ? (isLoading ? t('Processing...') : t('Log in')) : (isLoading ? t('Processing...') : t('Register'))}\r\n                  \r\n                  <ArrowRight className={`ml-2 h-5 w-5 transition-transform group-hover:translate-x-1 ${isLoading ? 'animate-bounce' : ''}`} />\r\n                </span>\r\n                \r\n                {/* Button animation overlay */}\r\n                <span className=\"absolute inset-0 w-full h-full bg-gradient-to-r from-blue-500 to-blue-600 px-6 py-2 rounded-lg hover:from-blue-600 hover:to-blue-700 transition-all transform hover:scale-105 duration-300\"></span>\r\n              \r\n                \r\n              </button>\r\n            </>\r\n          )}\r\n        </form>\r\n      \r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1432, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/rarsh/Documents/blaffa%20project/blaffa_site/src/app/auth/page.tsx"],"sourcesContent":["'use client';\n\n//import Footer from '../components/footer';\nimport React, { useEffect } from 'react';\nimport AuthForm from '../../components/AuthForm';\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\n//import { useTranslation } from 'react-i18next';\n//import axios from 'axios';\nimport { useTheme } from '../../components/ThemeProvider';\nimport api from '@/lib/axios';\n// import { ArrowLeft } from 'lucide-react'; // No longer used\nimport { Player } from '@lottiefiles/react-lottie-player';\n// const { t } = useTranslation(); // No longer used\nimport { Download } from 'lucide-react'; // Add this import\n\nconst AuthPage: React.FC = () => {\n  const [isClient, setIsClient] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const router = useRouter();\n  const { theme } = useTheme();\n\n  // Add this function inside your component\n  const handleMenuItemClick = (callback: () => void) => {\n    callback();\n  };\n\n  useEffect(() => {\n    const validateToken = async () => {\n      try {\n        setIsLoading(true);\n        const token = localStorage.getItem('accessToken');\n        \n        // If no token exists, allow user to stay on homepage\n        if (!token) {\n          setIsLoading(false);\n          return;\n        }\n\n        // Verify token with backend\n        const response = await api.get('/auth/me', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        // If token is valid, redirect to dashboard\n        if (response.status === 200) {\n          router.replace('/dashboard'); // Use replace instead of push to prevent back navigation\n        }\n      } catch (error) {\n        // Token validation failed - clear the invalid token\n        console.error('Token validation failed:', error);\n        localStorage.removeItem('accessToken');\n        setIsLoading(false);\n      }\n    };\n\n    validateToken();\n    setIsClient(true);\n  }, [router]); // Add router as a dependency\n\n  if (typeof window !== 'undefined' && localStorage.getItem('accessToken')) {\n    router.replace('/dashboard');\n    return null;\n  }\n\n  if (isLoading && isClient) {\n    return (\n      <div className={`min-h-screen ${theme.colors.background} flex items-center justify-center`}>\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n\n  // Only render the full content when on the client and not loading\n  if (!isClient) {\n    return <div className=\"min-h-screen\"></div>; // Simple placeholder during SSR\n  }\n\n  return (\n    <div className={`min-h-screen bg-gradient-to-br ${theme.colors.a_background} transition-colors flex flex-col md:flex-row`}>\n      {/* Left Side: Animation/Illustration */}\n      <div className=\"hidden md:flex w-1/2 items-center justify-center bg-gradient-to-br from-blue-900 to-blue-700 p-8 relative\">\n        <div className=\"w-full max-w-md flex flex-col items-center\">\n          <Player\n            autoplay\n            loop\n            src=\"https://assets2.lottiefiles.com/packages/lf20_49rdyysj.json\"\n            style={{ height: '320px', width: '320px' }}\n          />\n          <h2 className=\"text-2xl font-bold text-white mt-8 text-center\">Achetez, vendez des cryptomonnaies et pariez instantanément</h2>\n          <p className=\"text-white/80 mt-4 text-center\">\n            Achetez, vendez et échangez vos cryptomonnaies en toute sécurité et simplicité.<br/>\n            Déposez et retirez instantanément sur vos plateformes de paris préférées.<br/>\n            Profitez de la meilleure expérience de trading crypto et de paris en ligne avec Blaffa.\n          </p>\n        </div>\n      </div>\n      {/* Right Side: Auth Form */}\n      <div className=\"flex-1 flex flex-col items-center justify-center px-6 py-8 bg-transparent\">\n        <div className=\"w-full max-w-md\">\n          <AuthForm />\n          <br></br>\n          <br></br>\n          <button\n            onClick={() => handleMenuItemClick(() => {\n              window.location.href = 'https://api.blaffa.net/download_apk';\n            })}\n            className=\"flex px-3 py-2 items-center gap-2 bg-gray-900 hover:bg-gray-800 transition-colors text-left group rounded-lg max-w-fit mt-4 ml-30\"\n          >\n            <div className=\"w-8 h-8 rounded-lg bg-blue-500/20 flex items-center justify-center group-hover:bg-blue-500/30 transition-colors\">\n              <Download size={16} className=\"text-blue-500\" />\n            </div>\n            <span className=\"text-gray-400 group-hover:text-white transition-colors text-sm whitespace-nowrap\">\n              {\"Télécharger l'application ANDROID\"}\n            </span>\n          </button>\n          {/* Trust indicators */}\n          <div className=\"mt-4 text-center\">\n            <div className=\"flex items-center justify-center space-x-2\">\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AuthPage;"],"names":[],"mappings":"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","debugId":null}}]
}